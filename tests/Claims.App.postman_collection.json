{
	"info": {
		"_postman_id": "5a39b02f-dc39-4b3b-bf75-28eb375c5b81",
		"name": "Claims.App",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "200 text ok",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70efbf9c-f40e-4324-b251-2a80babff658",
						"exec": [
							"pm.test(\"Given valid email, when paymentMethod is valid, payment method is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.expense.paymentMethod).to.eql(\"personal card\");",
							"});",
							"",
							"pm.test(\"Given valid email, when total is valid, total excl GST is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.expense.totalExclGST).to.eql(890.44);",
							"});",
							"",
							"pm.test(\"Given valid email, when total is valid, total excl GST is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.expense.costCentre).to.eql(\"DEV002\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "text/plain",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "Hi Yvaine,\n\nPlease create an expense claim for the below. Relevant details are marked up as\nrequested…\n\n<expense><cost_centre>DEV002</cost_centre>\n    <total>1024.01</total><payment_method>personal card</payment_method>\n</expense>\n\nFrom: Ivan Castle\nSent: Friday, 16 February 2018 10:32 AM\nTo: Antoine Lloyd <Antoine.Lloyd@example.com>\nSubject: test\n\nHi Antoine,\n\nPlease create a reservation at the <vendor>Viaduct Steakhouse</vendor> our <description>development team’s project end celebration dinner</description> on <date>Tuesday 25 April 2017</date>. We expect to arrive around 7.15pm. Approximately 12 people but I’ll confirm exact numbers closer to the day.\n\nRegards,\nIvan"
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/api/claims/email",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"claims",
						"email"
					]
				}
			},
			"response": []
		},
		{
			"name": "200 text missing optional tags",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70efbf9c-f40e-4324-b251-2a80babff658",
						"exec": [
							"pm.test(\"Given valid email, when paymentMethod is valid, payment method is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.expense.paymentMethod).to.eql(null);",
							"});",
							"",
							"pm.test(\"Given valid email, when total is valid, total excl GST is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.expense.totalExclGST).to.eql(890.44);",
							"});",
							"",
							"pm.test(\"Given valid email, when total is valid, total excl GST is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.expense.costCentre).to.eql(\"UNKNOWN\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "text/plain"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "Hi Yvaine,\n\nPlease create an expense claim for the below. Relevant details are marked up as\nrequested…\n\n<total>1024.01</total>\n\nFrom: Ivan Castle\nSent: Friday, 16 February 2018 10:32 AM\nTo: Antoine Lloyd <Antoine.Lloyd@example.com>\nSubject: test\n\nHi Antoine,\n\nPlease create a reservation at the Viaduct Steakhouse our development team’s project end celebration dinner on Tuesday 25 April 2017. We expect to arrive around 7.15pm. Approximately 12 people but I’ll confirm exact numbers closer to the day.\n\nRegards,\nIvan"
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/api/claims/email",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"claims",
						"email"
					]
				}
			},
			"response": []
		},
		{
			"name": "200 text missing cost_centre",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70efbf9c-f40e-4324-b251-2a80babff658",
						"exec": [
							"pm.test(\"Given valid email, when cost centre is missing, UNKNOWN is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.expense.costCentre).to.eql(\"UNKNOWN\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "text/plain"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "Hi Yvaine,\n\nPlease create an expense claim for the below. Relevant details are marked up as\nrequested…\n\n<expense>\n    <total>1024.01</total><payment_method>personal card</payment_method>\n</expense>\n\nFrom: Ivan Castle\nSent: Friday, 16 February 2018 10:32 AM\nTo: Antoine Lloyd <Antoine.Lloyd@example.com>\nSubject: test\n\nHi Antoine,\n\nPlease create a reservation at the <vendor>Viaduct Steakhouse</vendor> our <description>development team’s project end celebration dinner</description> on <date>Tuesday 25 April 2017</date>. We expect to arrive around 7.15pm. Approximately 12 people but I’ll confirm exact numbers closer to the day.\n\nRegards,\nIvan"
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/api/claims/email",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"claims",
						"email"
					]
				}
			},
			"response": []
		},
		{
			"name": "400 missing total",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70efbf9c-f40e-4324-b251-2a80babff658",
						"exec": [
							"pm.test(\"Given missing total tag, 400 (BadRequest) is returned\", function () {",
							"    pm.response.to.have.status(400);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.Message).to.eql(\"Xml element 'total' is missing.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "text/plain"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "Hi Yvaine,\n\nPlease create an expense claim for the below. Relevant details are marked up as\nrequested…\n\n<expense><cost_centre>DEV002</cost_centre>\n    <payment_method>personal card</payment_method>\n</expense>\n\nFrom: Ivan Castle\nSent: Friday, 16 February 2018 10:32 AM\nTo: Antoine Lloyd <Antoine.Lloyd@example.com>\nSubject: test\n\nHi Antoine,\n\nPlease create a reservation at the <vendor>Viaduct Steakhouse</vendor> our <description>development team’s project end celebration dinner</description> on <date>Tuesday 25 April 2017</date>. We expect to arrive around 7.15pm. Approximately 12 people but I’ll confirm exact numbers closer to the day.\n\nRegards,\nIvan\n"
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/api/claims/email",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"claims",
						"email"
					]
				}
			},
			"response": []
		},
		{
			"name": "400 malformed date",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70efbf9c-f40e-4324-b251-2a80babff658",
						"exec": [
							"pm.test(\"Given invalid date, 400 (BadRequest) is returned\", function () {",
							"    pm.response.to.have.status(400);",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.Message).to.eql(\"Input is not a valid date: [Tuesday 27 April 2017]\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "text/plain"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "Hi Yvaine,\n\nPlease create an expense claim for the below. Relevant details are marked up as\nrequested…\n\n<expense><cost_centre>DEV002</cost_centre>\n   <total>1024.01</total><payment_method>personal card</payment_method>\n</expense>\n\nFrom: Ivan Castle\nSent: Friday, 16 February 2018 10:32 AM\nTo: Antoine Lloyd <Antoine.Lloyd@example.com>\nSubject: test\n\nHi Antoine,\n\nPlease create a reservation at the <vendor>Viaduct Steakhouse</vendor> our <description>development team’s project end celebration dinner</description> on <date>Tuesday 27 April 2017</date>. We expect to arrive around 7.15pm. Approximately 12 people but I’ll confirm exact numbers closer to the day.\n\nRegards,\nIvan\n"
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/api/claims/email",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"claims",
						"email"
					]
				}
			},
			"response": []
		},
		{
			"name": "All Claims",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{host}}:{{port}}/api/claims",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"claims"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "5afca77e-7cdb-477c-a242-703a77010472",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "1d25a1bf-01a5-478c-8d19-abee5a101841",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "bac47ff1-88c6-4a31-a1cd-196ec0a292e8",
			"key": "protocol",
			"value": "http",
			"type": "string"
		},
		{
			"id": "7819f701-b923-4fa6-a121-8decd49f802f",
			"key": "host",
			"value": "localhost",
			"type": "string"
		},
		{
			"id": "da745142-9b3a-41e8-acef-41c22a5d6758",
			"key": "port",
			"value": "5000",
			"type": "string"
		}
	]
}